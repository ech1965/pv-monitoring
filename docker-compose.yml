version: "3"
services:
  traefik:
    image: "traefik:v2.7"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    networks:  
      - monitoring
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - renderer
      - influxdb
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - TZ=Europe/Brussels
      - GF_INSTALL_PLUGINS=fetzerch-sunandmoon-datasource,grafana-clock-panel
      - GF_DEFAULT_FORCE_MIGRATION=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.googlemail.com:587
      - GF_SMTP_USER=myuser
      - GF_SMTP_PASSWORD=mypassword
      - GF_SMTP_FROM_ADDRESS=grafana@gmail.com
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/pv-monitoring.json
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.pv-mon.phi8.ovh`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    restart: unless-stopped
    expose:
      - 8081
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    expose:
      - 8086
      - 8083
    ports:
      - "8086:8086"
      - "8083:8083"
    volumes:
      - influxdb:/var/lib/influxdb
      - ./influxdb/influxdb-init.iql:/docker-entrypoint-initdb.d/influxdb-init.iql
    environment:
      - INFLUXDB_DB=monitoring
      - TZ=Europe/Brussels
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: unless-stopped
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
      TZ: Europe/Brussels
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
      - telegraf-logs:/var/log/telegraf

    depends_on:
      - influxdb
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  # node-red:
  #   build: node-red
  #   container_name: node-red
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Europe/Brussels
  #   ports:
  #     - "1880:1880"
  #   volumes:
  #     - node-red:/data
  #     - ./node-red/flows.json:/data/flows.json
  #   networks:
  #     - monitoring
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.node-red.rule=Host(`node-red.pv-mon.phi8.ovh`)"
  #     - "traefik.http.services.node-red.loadbalancer.server.port=1880"

  sungather:
    image: michbeck100/sungather:latest
    container_name: sungather
    restart: unless-stopped
    volumes:
      - ./sungather/config.yaml:/config/config.yaml
    environment:
      - TZ=Europe/Brussels
    ports:
      - "8082:8082"
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sungather.rule=Host(`sungather.pv-mon.phi8.ovh`)"
      - "traefik.http.services.sungather.loadbalancer.server.port=8082"

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-data:/mosquitto/data
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mosquitto.rule=Host(`mqtt.pv-mon.phi8.ovh`)"
      - "traefik.http.services.mosquitto.loadbalancer.server.port=1883"

  # evcc:
  #   command:
  #     - evcc
  #   container_name: evcc
  #   entrypoint:
  #     - /app/entrypoint.sh
  #   environment:
  #     - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  #     - TZ=Europe/Brussels
  #   image: andig/evcc:latest
  #   ipc: private
  #   logging:
  #     driver: json-file
  #     options: {}
  #   ports:
  #     - 7070:7070/tcp
  #   volumes:
  #     - ./evcc/evcc.yaml:/etc/evcc.yaml
  #   restart: unless-stopped
  #   working_dir: /app
  #   depends_on:
  #     - influxdb
  #   networks:
  #     - monitoring
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.evcc.rule=Host(`evcc.pv-mon.phi8.ovh`)"
  #     - "traefik.http.services.evcc.loadbalancer.server.port=7070"

volumes:
  influxdb:
  grafana:
  node-red:
  mosquitto-data:
  telegraf-logs:

networks:
  monitoring:
    external: true
